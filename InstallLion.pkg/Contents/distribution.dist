<?xml version="1.0" encoding="utf-8"?>
<installer-script minSpecVersion="1.000000">
    <title>OS X Lion</title>
    <options customize="never" allow-external-scripts="no" rootVolumeOnly="false"/>
    <installation-check script="install_check();"/>
    <volume-check script="volume_check();"/>

    <script>
function volume_check() {
  if(my.target.systemVersion) {
    if(system.compareVersions(my.target.systemVersion.ProductVersion, '10.8') &gt;= 0) {
      my.result.title = 'Failure';
      my.result.message = 'OS on target is too new to install this version safely.';
      my.result.type = 'Fatal';
      return false;
    }
    // Don't allow upgrades on volumes less than 10.6.6
    if(system.compareVersions(my.target.systemVersion.ProductVersion, '10.6.6') &lt; 0) {
      my.result.title = 'Failure';
      my.result.message = 'OS on target volume is too old to upgrade safely.';
      my.result.type = 'Fatal';
      return false;
    }
  }
  return true;
}

function install_check() {
  if(system.sysctl('hw.memsize') &lt; 2 * 1024 * 1024 * 1024) {
    my.result.title = 'Not enough RAM';
    my.result.message = '2GB of RAM required to install.';
    my.result.type = 'Fatal';
    return false;
  }
  if(!(system.sysctl('hw.cpu64bit_capable') == true)) {
    my.result.title = 'Not 64-bit capable CPU';
    my.result.message = 'Cannot install on this type of Mac';
    my.result.type = 'Fatal';
    return false;
  }
  if(!(system.sysctl('hw.cputype') == '7')) {
    my.result.title = 'Not Intel Processor';
    my.result.message = 'Cannot install on this type of Mac';
    my.result.type = 'Fatal';
    return false;
  }
  return true;
}
</script>

<choices-outline>
    <line choice='manual'/>
</choices-outline>

<choice id='manual'>
	<pkg-ref id='manual' auth='Root'>.</pkg-ref>
</choice>

<pkg-ref id='manual' installKBytes='8388608' onConclusion='RequireRestart' version='1.0'/>

</installer-script>
